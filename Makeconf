# Copyright 2004 Spencer Olson

MAINDIR=/afs/umich.edu/user/o/l/olsonse/src/olson-tools

PROCESSOR=$(shell uname -p)

ifeq ($(PROCESSOR),unknown)
    PROCESSOR=$(shell uname -i)
endif
ifeq ($(PROCESSOR),unknown)
    PROCESSOR=$(shell uname -m)
endif
ifeq ($(PROCESSOR),unknown)
    Your stinking machine won't tell me what type of processor it has
endif

OS=$(shell uname)

EXT_Linux=-Linux
EXT_SunOS=-SunOS
EXT_Darwin=-Darwin
EXT=$(EXT_$(OS))-$(PROCESSOR)

CC_SunOS=gcc
CXX_SunOS=g++
F77_SunOS=g77
#F77_SunOS=f95

CC_Darwin=gcc
CXX_Darwin=g++
F77_Darwin=g77
#F77_Darwin=f95

#CC_Linux=gcc
#CXX_Linux=g++
#F77_Linux=gfortran
#F77_Linux=g77
#F77_Linux=f95
CC_Linux=icc
CXX_Linux=icpc
F77_Linux=ifort
#CC_Linux=gcc-4.0
#CXX_Linux=g++-4.0
#F77_Linux=gfortran-4.0


#CC_Linux=pgcc
#CXX_Linux=pgCC
#F77_Linux=pgf90


# and set the actual compiler used
CC=$(CC_$(OS))
CXX=$(CXX_$(OS))
F77=$(F77_$(OS))

ifeq ($(DEBUG),)
    DEBUG_CC=$(OPTIM_CC) $(PROFILE)
    DEBUG_F77=$(OPTIM_F77) $(PROFILE)
else
    DEBUG_CC=$(DEBUG) $(PROFILE)
    DEBUG_F77=$(DEBUG) $(PROFILE)
endif

CFLAGS_gcc_athlon=-Wall -fpic 
CFLAGS_gcc_i686=-Wall -fpic 
CFLAGS_gcc_x86_64=-Wall -fpic 
CFLAGS_gcc_powerpc=-Wall -fPIC 
CFLAGS_gcc-3.4.3_powerpc=-Wall -fPIC 
CFLAGS_gcc_sparc=-Wall -fpic 
CFLAGS_gcc-4.0_athlon=-Wall -fpic 
CFLAGS_gcc-4.0_i686=-Wall -fpic 
CFLAGS_gcc-4.0_x86_64=-Wall -fpic 

CFLAGS_icc_athlon=-w1 -fpic 
CFLAGS_icc_i686=-w1 -fpic 
CFLAGS_icc_x86_64=-w1 -fpic 


CFLAGS_pgcc_x86_64=-Minform=warn -fpic  -B -DPGCC \
    --instantiate=local

#    --instantiate=used
#    --instantiation_dir/home/olsonse/src/olson-tools/templates
#   --one_instantiation_per_object --prelink_objects \


OPTIM_gcc_athlon=-O3 -mcpu=athlon-xp -march=athlon-xp -malign-double -mmmx -m3dnow -msse -maccumulate-outgoing-args
OPTIM_gcc_i686=-O3 -mcpu=pentium4 -march=pentium4 -malign-double -mmmx -msse -msse2 -maccumulate-outgoing-args
OPTIM_gcc_x86_64=-O3 -m64 -mcpu=k8 -march=k8 -mmmx -msse -msse2 -m3dnow -maccumulate-outgoing-args

OPTIM_gcc-4.0_athlon=-O3 -mtune=athlon-xp -march=athlon-xp -malign-double -mmmx -m3dnow -msse -maccumulate-outgoing-args
OPTIM_gcc-4.0_i686=-O3 -mtune=pentium4 -march=pentium4 -malign-double -mmmx -msse -msse2 -maccumulate-outgoing-args
OPTIM_gcc-4.0_x86_64=-O3 -m64 -mtune=k8 -march=k8 -mmmx -msse -msse2 -m3dnow -maccumulate-outgoing-args

OPTIM_gcc_powerpc= -O3 -funroll-loops -fstrict-aliasing -fsched-interblock \
           -falign-loops=16 -falign-jumps=16 -falign-functions=16 \
           -ffast-math -mpowerpc-gpopt -mpowerpc-gfxopt -force_cpusubtype_ALL \
           -mtune=powerpc -mcpu=powerpc
#           -malign-power \

OPTIM_gcc-3.4.3_powerpc=$(OPTIM_gcc_powerpc)
OPTIM_gcc_sparc=-O3 -mcpu=v9 -mtune=v9

OPTIM_g77_athlon=$(OPTIM_gcc_athlon)
OPTIM_g77_i686=$(OPTIM_gcc_i686)
OPTIM_g77_x86_64=$(OPTIM_gcc_x86_64)
OPTIM_g77_powerpc=$(OPTIM_gcc_powerpc)
OPTIM_g77-3.4.3_powerpc=$(OPTIM_gcc_powerpc)
OPTIM_g77_sparc=$(OPTIM_gcc_sparc)

OPTIM_gfortran-4.0_athlon=$(OPTIM_gcc-4.0_athlon)
OPTIM_gfortran-4.0_i686=$(OPTIM_gcc-4.0_i686)
OPTIM_gfortran-4.0_x86_64=$(OPTIM_gcc-4.0_x86_64)

OPTIM_gfortran_athlon=$(OPTIM_gcc-4.0_athlon)
OPTIM_gfortran_i686=$(OPTIM_gcc-4.0_i686)
OPTIM_gfortran_x86_64=$(OPTIM_gcc-4.0_x86_64)

OPTIM_pgcc_x86_64=-tp=k8-64 -fastsse  -Mipa=inline:10 -O2
OPTIM_pgCC_x86_64=$(OPTIM_pgcc_x86_64)
OPTIM_pgf90_x86_64=$(OPTIM_pgcc_x86_64)

OPTIM_icc_x86_64=-xW -ip -O3
OPTIM_ifort_x86_64=$(OPTIM_icc_x86_64)

OPTIM_icc_athlon=-xK -ip -O3
OPTIM_ifort_athlon=$(OPTIM_icc_athlon)

OPTIM_f95_athlon=-O3 -Wc,-mcpu=athlon-xp,-march=athlon-xp,-malign-double,-mmmx,-m3dnow,-msse,-maccumulate-outgoing-args
OPTIM_f95_i686=-O3 -Wc,-mcpu=pentium4,-march=pentium4,-malign-double,-mmmx,-msse,-msse2
OPTIM_f95_x86_64=-O3 -Wc,-m64,-mcpu=k8,-march=k8,-mmmx,-msse,-msse2,-m3dnow
OPTIM_f95_powerpc=-O3 -Wc,-fast
OPTIM_f95_sparc=-O3 -Wc,-fast

OPTIM_CC=$(OPTIM_$(CC)_$(PROCESSOR))
OPTIM_F77=$(OPTIM_$(F77)_$(PROCESSOR))

POW_athlon=1
POW_i686=$(POW_athlon)
POW_x86_64=$(POW_athlon)
POW_powerpc=
POW_pgcc_x86_64=0

ifeq ($(POW_$(CC)_$(PROCESSOR)),)
    ifeq ($(POW_$(PROCESSOR)),1)
        POW=-DUSE_SPENCERS_FAST_POW
    endif
else
    ifeq ($(POW_$(CC)_$(PROCESSOR)),1)
        POW=-DUSE_SPENCERS_FAST_POW
    endif
endif

LIBTRAPFE=libtrapfe$(EXT).a

ifeq ($(TRAPFE),1)
    INCTRAPFE=-ltrapfe$(EXT)
endif


CFLAGS=${DEBUG_CC} $(CFLAGS_$(CC)_$(PROCESSOR)) -DF77COMP_$(subst -,_,$(subst .,,$(F77)))=1 \
	$(POW) $(INCLUDES)

FFLAGS_g77=-ffree-form -ff90 -Wall  -fno-second-underscore
FFLAGS_g77-3.4.3=-ffree-form -ff90 -Wall  -fno-second-underscore
FFLAGS_gfortran-4.0=-ffree-form -x f95-cpp-input -Wall 
FFLAGS_gfortran=-ffree-form -x f95-cpp-input -Wall 
FFLAGS_f95=-free -C=none -w=x77
FFLAGS_ifort=-free -warn all
FFLAGS_pgf90=-Mfree

FLIBS_g77=-L/opt/local/lib/ -lg2c
FLIBS_gfortran-4.0= -lgfortran
FLIBS_gfortran= -lgfortran
FLIBS_f95=/usr/local/NAG/asli/lib/NAGWare/quickfit.o -L/usr/local/NAG/asli/lib -lf96
FLIBS_ifort=-lifport -lifcore -limf
FLIBS_pgf90=-lpgf90 -lpgf90_rpm1 -lpgf902 -lpgf90rtl -lpgftnrtl

FMACROSFILE=fmacros.h

FFLAGS=$(FFLAGS_$(F77)) ${DEBUG_F77} \
	-DLANGUAGE_FORTRAN__=1 -DF77COMP_$(subst -,_,$(subst .,,$(F77)))=1 \
	$(POW) $(INCLUDES)
FLIBS=$(FLIBS_$(F77))

LIBS=$(LIBS_EXTRA) $(INCTRAPFE) -lstdc++ $(FLIBS) -lm

# to make it easier to change the command run to compile, though the compiler
# doesn't change:  i.e. for compiles such as with MPI.
CXX_effective=$(CXX)
CC_effective=$(CC)
F77_effective=$(F77)

#now for a few simple rules
%.o:%.C %.h
	$(CXX_effective) $(CFLAGS) -o $@ -c $<

%.o:%.C
	$(CXX_effective) $(CFLAGS) -o $@ -c $<

%.o:%.cpp %.h
	$(CXX_effective) $(CFLAGS) -o $@ -c $<

%.o:%.cpp
	$(CXX_effective) $(CFLAGS) -o $@ -c $<

%.o:%.c %.h
	$(CC_effective) $(CFLAGS) -o $@ -c $<

%.o:%.c
	$(CC_effective) $(CFLAGS) -o $@ -c $<

%.o:%.f
	$(F77_effective) $(FFLAGS) -o $@ -c $<

%.o:%.F
	$(F77_effective) $(FFLAGS) -o $@ -c $<

